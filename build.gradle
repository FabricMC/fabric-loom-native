plugins {
	id "java-library"
    id "com.diffplug.spotless"  version "6.25.0" apply false
    id "de.undercouch.download" version "5.5.0"  apply false
}

allprojects {
    apply plugin: 'com.diffplug.spotless'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.0"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

test {
    useJUnitPlatform()
}

spotless {
    lineEndings = com.diffplug.spotless.LineEnding.UNIX

    java {
        licenseHeaderFile(rootProject.file("HEADER")).yearSeparator("-")
        removeUnusedImports()
        importOrder('java', 'javax', '', 'net.fabricmc')
        indentWithTabs()
        trimTrailingWhitespace()
    }
}

def architectures = [
    "X86",
    "X86-64",
    "Aarch64"
]

def collectDlls = tasks.register("collectDlls", Sync) {
    architectures.forEach { arch ->
        from(project(":windows").tasks.named("linkRelease${arch}").get().linkedFile) {
            into "fabric-loom-native/" + arch.toLowerCase()
        }
    }

    rename { fileName ->
        "fabric-loom-native.dll"
    }

    into layout.buildDirectory.dir("dlls")
}

sourceSets.main.resources.srcDir collectDlls